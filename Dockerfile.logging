# Enhanced Logging System Dockerfile
# 用于部署具有增强日志功能的 Claude Code Router

FROM node:18-alpine AS base

# 设置工作目录
WORKDIR /app

# 安装必要的系统依赖
RUN apk add --no-cache \
    dumb-init \
    && addgroup -g 1001 -S nodejs \
    && adduser -S nodejs -u 1001

# 复制 package.json 和 pnpm-lock.yaml
COPY package*.json pnpm-lock.yaml* ./

# 安装 pnpm
RUN npm install -g pnpm

# 安装依赖
RUN pnpm install --frozen-lockfile --prod

# 复制源代码
COPY . .

# 构建应用
RUN pnpm run build

# 创建日志目录并设置权限
RUN mkdir -p /app/logs \
    && chown -R nodejs:nodejs /app/logs \
    && chmod -R 755 /app/logs

# 创建配置目录
RUN mkdir -p /app/config \
    && chown -R nodejs:nodejs /app/config \
    && chmod -R 755 /app/config

# 复制示例配置文件
RUN cp config.example.enhanced-logging.json /app/config/logging-config.json

# 切换到非root用户
USER nodejs

# 暴露端口
EXPOSE 3000

# 设置环境变量
ENV NODE_ENV=production
ENV LOG_LEVEL=info
ENV LOG_DIRECTORY=/app/logs
ENV LOG_RETENTION_DAYS=30
ENV LOG_MAX_FILE_SIZE=10M
ENV LOG_MAX_FILES=10

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }).on('error', () => { process.exit(1); })"

# 使用 dumb-init 作为 init 系统
ENTRYPOINT ["dumb-init", "--"]

# 启动命令
CMD ["node", "dist/cli.js"]